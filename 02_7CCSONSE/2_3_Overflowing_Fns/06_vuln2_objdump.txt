
./04_vuln2:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 a7 00 00 00       	call   10b0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 f7 2f 00 00    	add    $0x2ff7,%ebx
    100f:	8b 83 00 f1 ff ff    	mov    -0xf00(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <strcpy@plt-0x10>:
    1020:	ff b3 04 00 00 00    	push   0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <strcpy@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

00001040 <exit@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

00001050 <__libc_start_main@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00001060 <__cxa_finalize@plt>:
    1060:	ff a3 fc f0 ff ff    	jmp    *-0xf04(%ebx)
    1066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001070 <_start>:
    1070:	31 ed                	xor    %ebp,%ebp
    1072:	5e                   	pop    %esi
    1073:	89 e1                	mov    %esp,%ecx
    1075:	83 e4 f0             	and    $0xfffffff0,%esp
    1078:	50                   	push   %eax
    1079:	54                   	push   %esp
    107a:	52                   	push   %edx
    107b:	e8 22 00 00 00       	call   10a2 <_start+0x32>
    1080:	81 c3 80 2f 00 00    	add    $0x2f80,%ebx
    1086:	8d 83 90 d2 ff ff    	lea    -0x2d70(%ebx),%eax
    108c:	50                   	push   %eax
    108d:	8d 83 30 d2 ff ff    	lea    -0x2dd0(%ebx),%eax
    1093:	50                   	push   %eax
    1094:	51                   	push   %ecx
    1095:	56                   	push   %esi
    1096:	ff b3 04 f1 ff ff    	push   -0xefc(%ebx)
    109c:	e8 af ff ff ff       	call   1050 <__libc_start_main@plt>
    10a1:	f4                   	hlt    
    10a2:	8b 1c 24             	mov    (%esp),%ebx
    10a5:	c3                   	ret    
    10a6:	66 90                	xchg   %ax,%ax
    10a8:	66 90                	xchg   %ax,%ax
    10aa:	66 90                	xchg   %ax,%ax
    10ac:	66 90                	xchg   %ax,%ax
    10ae:	66 90                	xchg   %ax,%ax

000010b0 <__x86.get_pc_thunk.bx>:
    10b0:	8b 1c 24             	mov    (%esp),%ebx
    10b3:	c3                   	ret    
    10b4:	66 90                	xchg   %ax,%ax
    10b6:	66 90                	xchg   %ax,%ax
    10b8:	66 90                	xchg   %ax,%ax
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <deregister_tm_clones>:
    10c0:	e8 e0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    10c5:	81 c2 3b 2f 00 00    	add    $0x2f3b,%edx
    10cb:	8d 8a 20 00 00 00    	lea    0x20(%edx),%ecx
    10d1:	8d 82 20 00 00 00    	lea    0x20(%edx),%eax
    10d7:	39 c8                	cmp    %ecx,%eax
    10d9:	74 1d                	je     10f8 <deregister_tm_clones+0x38>
    10db:	8b 82 f8 f0 ff ff    	mov    -0xf08(%edx),%eax
    10e1:	85 c0                	test   %eax,%eax
    10e3:	74 13                	je     10f8 <deregister_tm_clones+0x38>
    10e5:	55                   	push   %ebp
    10e6:	89 e5                	mov    %esp,%ebp
    10e8:	83 ec 14             	sub    $0x14,%esp
    10eb:	51                   	push   %ecx
    10ec:	ff d0                	call   *%eax
    10ee:	83 c4 10             	add    $0x10,%esp
    10f1:	c9                   	leave  
    10f2:	c3                   	ret    
    10f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10f7:	90                   	nop
    10f8:	c3                   	ret    
    10f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001100 <register_tm_clones>:
    1100:	e8 a0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    1105:	81 c2 fb 2e 00 00    	add    $0x2efb,%edx
    110b:	55                   	push   %ebp
    110c:	89 e5                	mov    %esp,%ebp
    110e:	53                   	push   %ebx
    110f:	8d 8a 20 00 00 00    	lea    0x20(%edx),%ecx
    1115:	8d 82 20 00 00 00    	lea    0x20(%edx),%eax
    111b:	83 ec 04             	sub    $0x4,%esp
    111e:	29 c8                	sub    %ecx,%eax
    1120:	89 c3                	mov    %eax,%ebx
    1122:	c1 e8 1f             	shr    $0x1f,%eax
    1125:	c1 fb 02             	sar    $0x2,%ebx
    1128:	01 d8                	add    %ebx,%eax
    112a:	d1 f8                	sar    %eax
    112c:	74 14                	je     1142 <register_tm_clones+0x42>
    112e:	8b 92 08 f1 ff ff    	mov    -0xef8(%edx),%edx
    1134:	85 d2                	test   %edx,%edx
    1136:	74 0a                	je     1142 <register_tm_clones+0x42>
    1138:	83 ec 08             	sub    $0x8,%esp
    113b:	50                   	push   %eax
    113c:	51                   	push   %ecx
    113d:	ff d2                	call   *%edx
    113f:	83 c4 10             	add    $0x10,%esp
    1142:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1145:	c9                   	leave  
    1146:	c3                   	ret    
    1147:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    114e:	66 90                	xchg   %ax,%ax

00001150 <__do_global_dtors_aux>:
    1150:	55                   	push   %ebp
    1151:	89 e5                	mov    %esp,%ebp
    1153:	53                   	push   %ebx
    1154:	e8 57 ff ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1159:	81 c3 a7 2e 00 00    	add    $0x2ea7,%ebx
    115f:	83 ec 04             	sub    $0x4,%esp
    1162:	80 bb 20 00 00 00 00 	cmpb   $0x0,0x20(%ebx)
    1169:	75 27                	jne    1192 <__do_global_dtors_aux+0x42>
    116b:	8b 83 fc f0 ff ff    	mov    -0xf04(%ebx),%eax
    1171:	85 c0                	test   %eax,%eax
    1173:	74 11                	je     1186 <__do_global_dtors_aux+0x36>
    1175:	83 ec 0c             	sub    $0xc,%esp
    1178:	ff b3 1c 00 00 00    	push   0x1c(%ebx)
    117e:	e8 dd fe ff ff       	call   1060 <__cxa_finalize@plt>
    1183:	83 c4 10             	add    $0x10,%esp
    1186:	e8 35 ff ff ff       	call   10c0 <deregister_tm_clones>
    118b:	c6 83 20 00 00 00 01 	movb   $0x1,0x20(%ebx)
    1192:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1195:	c9                   	leave  
    1196:	c3                   	ret    
    1197:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    119e:	66 90                	xchg   %ax,%ax

000011a0 <frame_dummy>:
    11a0:	e9 5b ff ff ff       	jmp    1100 <register_tm_clones>

000011a5 <__x86.get_pc_thunk.dx>:
    11a5:	8b 14 24             	mov    (%esp),%edx
    11a8:	c3                   	ret    

000011a9 <foobar>:
    11a9:	55                   	push   %ebp
    11aa:	89 e5                	mov    %esp,%ebp
    11ac:	53                   	push   %ebx
    11ad:	83 ec 74             	sub    $0x74,%esp
    11b0:	e8 76 00 00 00       	call   122b <__x86.get_pc_thunk.ax>
    11b5:	05 4b 2e 00 00       	add    $0x2e4b,%eax
    11ba:	83 ec 08             	sub    $0x8,%esp
    11bd:	ff 75 08             	push   0x8(%ebp)
    11c0:	8d 55 94             	lea    -0x6c(%ebp),%edx
    11c3:	52                   	push   %edx
    11c4:	89 c3                	mov    %eax,%ebx
    11c6:	e8 65 fe ff ff       	call   1030 <strcpy@plt>
    11cb:	83 c4 10             	add    $0x10,%esp
    11ce:	90                   	nop
    11cf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11d2:	c9                   	leave  
    11d3:	c3                   	ret    

000011d4 <main>:
    11d4:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11d8:	83 e4 f0             	and    $0xfffffff0,%esp
    11db:	ff 71 fc             	push   -0x4(%ecx)
    11de:	55                   	push   %ebp
    11df:	89 e5                	mov    %esp,%ebp
    11e1:	53                   	push   %ebx
    11e2:	51                   	push   %ecx
    11e3:	e8 c8 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    11e8:	81 c3 18 2e 00 00    	add    $0x2e18,%ebx
    11ee:	89 c8                	mov    %ecx,%eax
    11f0:	8b 50 04             	mov    0x4(%eax),%edx
    11f3:	83 c2 04             	add    $0x4,%edx
    11f6:	8b 12                	mov    (%edx),%edx
    11f8:	85 d2                	test   %edx,%edx
    11fa:	75 07                	jne    1203 <main+0x2f>
    11fc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1201:	eb 1e                	jmp    1221 <main+0x4d>
    1203:	8b 40 04             	mov    0x4(%eax),%eax
    1206:	83 c0 04             	add    $0x4,%eax
    1209:	8b 00                	mov    (%eax),%eax
    120b:	83 ec 0c             	sub    $0xc,%esp
    120e:	50                   	push   %eax
    120f:	e8 95 ff ff ff       	call   11a9 <foobar>
    1214:	83 c4 10             	add    $0x10,%esp
    1217:	83 ec 0c             	sub    $0xc,%esp
    121a:	6a 00                	push   $0x0
    121c:	e8 1f fe ff ff       	call   1040 <exit@plt>
    1221:	8d 65 f8             	lea    -0x8(%ebp),%esp
    1224:	59                   	pop    %ecx
    1225:	5b                   	pop    %ebx
    1226:	5d                   	pop    %ebp
    1227:	8d 61 fc             	lea    -0x4(%ecx),%esp
    122a:	c3                   	ret    

0000122b <__x86.get_pc_thunk.ax>:
    122b:	8b 04 24             	mov    (%esp),%eax
    122e:	c3                   	ret    
    122f:	90                   	nop

00001230 <__libc_csu_init>:
    1230:	55                   	push   %ebp
    1231:	e8 5b 00 00 00       	call   1291 <__x86.get_pc_thunk.bp>
    1236:	81 c5 ca 2d 00 00    	add    $0x2dca,%ebp
    123c:	57                   	push   %edi
    123d:	56                   	push   %esi
    123e:	53                   	push   %ebx
    123f:	83 ec 0c             	sub    $0xc,%esp
    1242:	89 eb                	mov    %ebp,%ebx
    1244:	8b 7c 24 28          	mov    0x28(%esp),%edi
    1248:	e8 b3 fd ff ff       	call   1000 <_init>
    124d:	8d 9d 04 f0 ff ff    	lea    -0xffc(%ebp),%ebx
    1253:	8d 85 00 f0 ff ff    	lea    -0x1000(%ebp),%eax
    1259:	29 c3                	sub    %eax,%ebx
    125b:	c1 fb 02             	sar    $0x2,%ebx
    125e:	74 25                	je     1285 <__libc_csu_init+0x55>
    1260:	31 f6                	xor    %esi,%esi
    1262:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1268:	83 ec 04             	sub    $0x4,%esp
    126b:	57                   	push   %edi
    126c:	ff 74 24 2c          	push   0x2c(%esp)
    1270:	ff 74 24 2c          	push   0x2c(%esp)
    1274:	ff 94 b5 00 f0 ff ff 	call   *-0x1000(%ebp,%esi,4)
    127b:	83 c6 01             	add    $0x1,%esi
    127e:	83 c4 10             	add    $0x10,%esp
    1281:	39 f3                	cmp    %esi,%ebx
    1283:	75 e3                	jne    1268 <__libc_csu_init+0x38>
    1285:	83 c4 0c             	add    $0xc,%esp
    1288:	5b                   	pop    %ebx
    1289:	5e                   	pop    %esi
    128a:	5f                   	pop    %edi
    128b:	5d                   	pop    %ebp
    128c:	c3                   	ret    
    128d:	8d 76 00             	lea    0x0(%esi),%esi

00001290 <__libc_csu_fini>:
    1290:	c3                   	ret    

00001291 <__x86.get_pc_thunk.bp>:
    1291:	8b 2c 24             	mov    (%esp),%ebp
    1294:	c3                   	ret    

Disassembly of section .fini:

00001298 <_fini>:
    1298:	53                   	push   %ebx
    1299:	83 ec 08             	sub    $0x8,%esp
    129c:	e8 0f fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    12a1:	81 c3 5f 2d 00 00    	add    $0x2d5f,%ebx
    12a7:	83 c4 08             	add    $0x8,%esp
    12aa:	5b                   	pop    %ebx
    12ab:	c3                   	ret    
